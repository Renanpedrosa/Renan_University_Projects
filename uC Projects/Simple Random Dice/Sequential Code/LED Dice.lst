;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 05/08/2009 23:10:40
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2885      	GOTO       133
0x0001	0x0000      	NOP
0x0002	0x0000      	NOP
0x0003	0x0000      	NOP
0x0004	0x2900      	GOTO       256
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0005	0x1283      	BCF        STATUS, 5
0x0006	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0007	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0008	0x0820      	MOVF       ___DoICPAddr, 0
0x0009	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x000A	0x0008      	RETURN
; end of _____DoICP
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x000B	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x000C	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x000D	0x01DB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x000E	0x01DA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x000F	0x01D9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x0010	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x0011	0x00D8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x0012	0x0CD1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x0013	0x0CD0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0014	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0015	0x281F      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0016	0x0854      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0017	0x07D9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0018	0x0855      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0019	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x001A	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x001B	0x07DA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x001C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x001D	0x0ADB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x001E	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x001F	0x1FD0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x0020	0x2827      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x0021	0x0854      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x0022	0x07DA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x0023	0x0855      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0024	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0025	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0026	0x07DB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0027	0x0CDB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0028	0x0CDA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0029	0x0CD9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x002A	0x0CD8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x002B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x002C	0x2812      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x002D	0x085B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x002E	0x00D3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x002F	0x085A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x0030	0x00D2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x0031	0x0859      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x0032	0x00D1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x0033	0x0858      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0034	0x00D0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
0x0035	0x0008      	RETURN
; end of _Mul_16x16_U
_Div_16x16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0036	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0037	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0038	0x01D8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0039	0x01D9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x003A	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x003B	0x00DC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x003C	0x0D51      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x003D	0x0DD8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x003E	0x0DD9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x003F	0x0854      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0040	0x02D8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0041	0x0855      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0042	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0043	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0044	0x02D9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0045	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0046	0x284E      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0047	0x0854      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0048	0x07D8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0049	0x0855      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x004A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x004B	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x004C	0x07D9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x004D	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x004E	0x0DD0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x004F	0x0DD1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0050	0x0BDC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0051	0x283C      	GOTO       $-21
;__Lib_Math.c,251 :: 		
0x0052	0x0008      	RETURN
; end of _Div_16x16_U
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x0053	0x2005      	CALL       _____DoICP
0x0054	0x118A      	BCF        PCLATH, 3
0x0055	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x0056	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x0057	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0058	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0059	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x005A	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x005B	0x03D0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x005C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x005D	0x2853      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x005E	0x0008      	RETURN
; end of ___CC2DW
_Numero:
;LED Dice.c,49 :: 		unsigned char Numero(int Lim, int Y)
;LED Dice.c,54 :: 		Y = (Y * 32718 + 3) % 32749;
0x005F	0x1283      	BCF        STATUS, 5
0x0060	0x0823      	MOVF       Numero_Y_L0, 0
0x0061	0x00D0      	MOVWF      R0
0x0062	0x0824      	MOVF       Numero_Y_L0+1, 0
0x0063	0x00D1      	MOVWF      R0+1
0x0064	0x30CE      	MOVLW      206
0x0065	0x00D4      	MOVWF      R4
0x0066	0x307F      	MOVLW      127
0x0067	0x00D5      	MOVWF      R4+1
0x0068	0x200B      	CALL       _Mul_16x16_U
0x0069	0x3003      	MOVLW      3
0x006A	0x07D0      	ADDWF      R0, 1
0x006B	0x1803      	BTFSC      STATUS, 0
0x006C	0x0AD1      	INCF       R0+1, 1
0x006D	0x30ED      	MOVLW      237
0x006E	0x00D4      	MOVWF      R4
0x006F	0x307F      	MOVLW      127
0x0070	0x00D5      	MOVWF      R4+1
0x0071	0x2036      	CALL       _Div_16x16_U
0x0072	0x0858      	MOVF       R8, 0
0x0073	0x00D0      	MOVWF      R0
0x0074	0x0859      	MOVF       R8+1, 0
0x0075	0x00D1      	MOVWF      R0+1
0x0076	0x0850      	MOVF       R0, 0
0x0077	0x00A3      	MOVWF      Numero_Y_L0
0x0078	0x0851      	MOVF       R0+1, 0
0x0079	0x00A4      	MOVWF      Numero_Y_L0+1
;LED Dice.c,55 :: 		Result = ((Y % Lim) + 1);
0x007A	0x0832      	MOVF       FARG_Numero_Lim, 0
0x007B	0x00D4      	MOVWF      R4
0x007C	0x0833      	MOVF       FARG_Numero_Lim+1, 0
0x007D	0x00D5      	MOVWF      R4+1
0x007E	0x2036      	CALL       _Div_16x16_U
0x007F	0x0858      	MOVF       R8, 0
0x0080	0x00D0      	MOVWF      R0
0x0081	0x0859      	MOVF       R8+1, 0
0x0082	0x00D1      	MOVWF      R0+1
0x0083	0x0AD0      	INCF       R0, 1
;LED Dice.c,56 :: 		return Result;
;LED Dice.c,57 :: 		}
0x0084	0x0008      	RETURN
; end of _Numero
_main:
0x0085	0x1283      	BCF        STATUS, 5
0x0086	0x01A8      	CLRF       main_DADO_L0
0x0087	0x3001      	MOVLW      1
0x0088	0x00A9      	MOVWF      main_DADO_L0+1
0x0089	0x3004      	MOVLW      4
0x008A	0x00AA      	MOVWF      main_DADO_L0+2
0x008B	0x3005      	MOVLW      5
0x008C	0x00AB      	MOVWF      main_DADO_L0+3
0x008D	0x3022      	MOVLW      34
0x008E	0x00AC      	MOVWF      main_DADO_L0+4
0x008F	0x3023      	MOVLW      35
0x0090	0x00AD      	MOVWF      main_DADO_L0+5
0x0091	0x3026      	MOVLW      38
0x0092	0x00AE      	MOVWF      main_DADO_L0+6
0x0093	0x3001      	MOVLW      1
0x0094	0x00AF      	MOVWF      main_min_L0
;LED Dice.c,66 :: 		void main ()
;LED Dice.c,76 :: 		GPIO   = 0;                          //Desligar todos os LEDs
0x0095	0x0185      	CLRF       GPIO
;LED Dice.c,77 :: 		TRISIO = 0b011000;                   //Portas GP4 e GP3 são entrada
0x0096	0x3018      	MOVLW      24
0x0097	0x1683      	BSF        STATUS, 5
0x0098	0x0085      	MOVWF      TRISIO
;LED Dice.c,78 :: 		OSCCAL = 0x38;
0x0099	0x3038      	MOVLW      56
0x009A	0x0090      	MOVWF      OSCCAL
;LED Dice.c,79 :: 		IOC = 0x18;
0x009B	0x3018      	MOVLW      24
0x009C	0x0096      	MOVWF      IOC
;LED Dice.c,80 :: 		INTCON = 0xC8;
0x009D	0x30C8      	MOVLW      200
0x009E	0x008B      	MOVWF      INTCON
;LED Dice.c,83 :: 		for (;;)                             //Loop infinito
L_main0:
;LED Dice.c,86 :: 		if (bot1 == 0)
0x009F	0x0825      	MOVF       _bot1, 0
0x00A0	0x3A00      	XORLW      0
0x00A1	0x1D03      	BTFSS      STATUS, 2
0x00A2	0x28E7      	GOTO       L_main3
;LED Dice.c,88 :: 		for(i = 0; i<4; i++)
0x00A3	0x01B0      	CLRF       main_i_L0
L_main4:
0x00A4	0x3004      	MOVLW      4
0x00A5	0x0230      	SUBWF      main_i_L0, 0
0x00A6	0x1803      	BTFSC      STATUS, 0
0x00A7	0x28C8      	GOTO       L_main5
;LED Dice.c,90 :: 		J = Numero(6,min);
0x00A8	0x3006      	MOVLW      6
0x00A9	0x00B2      	MOVWF      FARG_Numero_Lim
0x00AA	0x3000      	MOVLW      0
0x00AB	0x00B3      	MOVWF      FARG_Numero_Lim+1
0x00AC	0x082F      	MOVF       main_min_L0, 0
0x00AD	0x00B4      	MOVWF      FARG_Numero_Y
0x00AE	0x01B5      	CLRF       FARG_Numero_Y+1
0x00AF	0x205F      	CALL       _Numero
;LED Dice.c,91 :: 		Pattern = DADO[J];          //Pegar padrao dos LEDs
0x00B0	0x0850      	MOVF       R0, 0
0x00B1	0x3E28      	ADDLW      main_DADO_L0
0x00B2	0x0084      	MOVWF      FSR
0x00B3	0x0800      	MOVF       INDF, 0
0x00B4	0x00D0      	MOVWF      R0
0x00B5	0x0850      	MOVF       R0, 0
0x00B6	0x00B1      	MOVWF      main_Pattern_L0
;LED Dice.c,92 :: 		GPIO = Pattern;             //Ligar LEDs correspondentes
0x00B7	0x0850      	MOVF       R0, 0
0x00B8	0x0085      	MOVWF      GPIO
;LED Dice.c,93 :: 		Delay_ms(400);              //Atraso de 400ms
0x00B9	0x3003      	MOVLW      3
0x00BA	0x00DB      	MOVWF      R11
0x00BB	0x3008      	MOVLW      8
0x00BC	0x00DC      	MOVWF      R12
0x00BD	0x3077      	MOVLW      119
0x00BE	0x00DD      	MOVWF      R13
L_main7:
0x00BF	0x0BDD      	DECFSZ     R13, 1
0x00C0	0x28BF      	GOTO       L_main7
0x00C1	0x0BDC      	DECFSZ     R12, 1
0x00C2	0x28BF      	GOTO       L_main7
0x00C3	0x0BDB      	DECFSZ     R11, 1
0x00C4	0x28BF      	GOTO       L_main7
;LED Dice.c,94 :: 		GPIO = 0;                   //Desligar todos os LEDs
0x00C5	0x0185      	CLRF       GPIO
;LED Dice.c,88 :: 		for(i = 0; i<4; i++)
0x00C6	0x0AB0      	INCF       main_i_L0, 1
;LED Dice.c,95 :: 		}
0x00C7	0x28A4      	GOTO       L_main4
L_main5:
;LED Dice.c,96 :: 		J = Numero(6,min);
0x00C8	0x3006      	MOVLW      6
0x00C9	0x00B2      	MOVWF      FARG_Numero_Lim
0x00CA	0x3000      	MOVLW      0
0x00CB	0x00B3      	MOVWF      FARG_Numero_Lim+1
0x00CC	0x082F      	MOVF       main_min_L0, 0
0x00CD	0x00B4      	MOVWF      FARG_Numero_Y
0x00CE	0x01B5      	CLRF       FARG_Numero_Y+1
0x00CF	0x205F      	CALL       _Numero
;LED Dice.c,97 :: 		Pattern = DADO[J];          //Pegar padrao dos LEDs
0x00D0	0x0850      	MOVF       R0, 0
0x00D1	0x3E28      	ADDLW      main_DADO_L0
0x00D2	0x0084      	MOVWF      FSR
0x00D3	0x0800      	MOVF       INDF, 0
0x00D4	0x00D0      	MOVWF      R0
0x00D5	0x0850      	MOVF       R0, 0
0x00D6	0x00B1      	MOVWF      main_Pattern_L0
;LED Dice.c,98 :: 		GPIO = Pattern;             //Ligar LEDs correspondentes
0x00D7	0x0850      	MOVF       R0, 0
0x00D8	0x0085      	MOVWF      GPIO
;LED Dice.c,99 :: 		Delay_ms(2500);             //Atraso de 2 segundos
0x00D9	0x300D      	MOVLW      13
0x00DA	0x00DB      	MOVWF      R11
0x00DB	0x30AF      	MOVLW      175
0x00DC	0x00DC      	MOVWF      R12
0x00DD	0x30B6      	MOVLW      182
0x00DE	0x00DD      	MOVWF      R13
L_main8:
0x00DF	0x0BDD      	DECFSZ     R13, 1
0x00E0	0x28DF      	GOTO       L_main8
0x00E1	0x0BDC      	DECFSZ     R12, 1
0x00E2	0x28DF      	GOTO       L_main8
0x00E3	0x0BDB      	DECFSZ     R11, 1
0x00E4	0x28DF      	GOTO       L_main8
0x00E5	0x0000      	NOP
;LED Dice.c,100 :: 		GPIO = 0;                   //Desligar todos os LEDs
0x00E6	0x0185      	CLRF       GPIO
;LED Dice.c,102 :: 		}
L_main3:
;LED Dice.c,105 :: 		if (bot2 == 0)
0x00E7	0x0822      	MOVF       _bot2, 0
0x00E8	0x3A00      	XORLW      0
0x00E9	0x1D03      	BTFSS      STATUS, 2
0x00EA	0x28FD      	GOTO       L_main9
;LED Dice.c,107 :: 		GPIO = Pattern;             //Ligar LEDs correspondentes
0x00EB	0x1283      	BCF        STATUS, 5
0x00EC	0x0831      	MOVF       main_Pattern_L0, 0
0x00ED	0x0085      	MOVWF      GPIO
;LED Dice.c,108 :: 		Delay_ms(2000);             //Atraso de 3 segundos
0x00EE	0x300B      	MOVLW      11
0x00EF	0x00DB      	MOVWF      R11
0x00F0	0x3026      	MOVLW      38
0x00F1	0x00DC      	MOVWF      R12
0x00F2	0x305D      	MOVLW      93
0x00F3	0x00DD      	MOVWF      R13
L_main10:
0x00F4	0x0BDD      	DECFSZ     R13, 1
0x00F5	0x28F4      	GOTO       L_main10
0x00F6	0x0BDC      	DECFSZ     R12, 1
0x00F7	0x28F4      	GOTO       L_main10
0x00F8	0x0BDB      	DECFSZ     R11, 1
0x00F9	0x28F4      	GOTO       L_main10
0x00FA	0x0000      	NOP
0x00FB	0x0000      	NOP
;LED Dice.c,109 :: 		GPIO = 0;                   //Desligar todos os LEDs
0x00FC	0x0185      	CLRF       GPIO
;LED Dice.c,110 :: 		}
L_main9:
;LED Dice.c,113 :: 		asm SLEEP;
0x00FD	0x0063      	SLEEP
;LED Dice.c,118 :: 		}
0x00FE	0x289F      	GOTO       L_main0
;LED Dice.c,120 :: 		}
0x00FF	0x28FF      	GOTO       $+0
; end of _main
_interrupt:
0x0100	0x00DF      	MOVWF      R15
0x0101	0x0E03      	SWAPF      STATUS, 0
0x0102	0x0183      	CLRF       STATUS
0x0103	0x00A6      	MOVWF      ___saveSTATUS
0x0104	0x080A      	MOVF       PCLATH, 0
0x0105	0x00A7      	MOVWF      ___savePCLATH
0x0106	0x018A      	CLRF       PCLATH
;LED Dice.c,59 :: 		interrupt()
;LED Dice.c,61 :: 		GPIF_bit = 0;
0x0107	0x100B      	BCF        GPIF_bit, 0
;LED Dice.c,62 :: 		bot1 = Botao1;
0x0108	0x3000      	MOVLW      0
0x0109	0x1A05      	BTFSC      GPIO, 4
0x010A	0x3001      	MOVLW      1
0x010B	0x00A5      	MOVWF      _bot1
;LED Dice.c,63 :: 		bot2 = Botao2;
0x010C	0x3000      	MOVLW      0
0x010D	0x1985      	BTFSC      GPIO, 3
0x010E	0x3001      	MOVLW      1
0x010F	0x00A2      	MOVWF      _bot2
;LED Dice.c,64 :: 		}
L__interrupt11:
0x0110	0x0827      	MOVF       ___savePCLATH, 0
0x0111	0x008A      	MOVWF      PCLATH
0x0112	0x0E26      	SWAPF      ___saveSTATUS, 0
0x0113	0x0083      	MOVWF      STATUS
0x0114	0x0EDF      	SWAPF      R15, 1
0x0115	0x0E5F      	SWAPF      R15, 0
0x0116	0x0009      	RETFIE
; end of _interrupt
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0005       [6]    _____DoICP
0x000B      [43]    _Mul_16x16_U
0x0036      [29]    _Div_16x16_U
0x0053      [12]    ___CC2DW
0x005F      [38]    _Numero
0x0085     [123]    _main
0x0100      [23]    _interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    Z_bit
0x0003       [0]    DC_bit
0x0003       [0]    IRP_bit
0x0003       [1]    STATUS
0x0003       [0]    RP1_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    C_bit
0x0003       [0]    RP0_bit
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    GP4_bit
0x0005       [1]    GPIO
0x0005       [0]    GP5_bit
0x0005       [0]    GP1_bit
0x0005       [0]    GP0_bit
0x0005       [0]    GP3_bit
0x0005       [0]    GP2_bit
0x000A       [1]    PCLATH
0x000B       [0]    PEIE_bit
0x000B       [0]    INTF_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    GPIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    GPIF_bit
0x000B       [0]    GIE_bit
0x000C       [0]    CMIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    T1IF_bit
0x000C       [1]    PIR1
0x000C       [0]    ADIF_bit
0x000C       [0]    EEIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    TMR1GE_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    TMR1CS_bit
0x0010       [1]    T1CON
0x0019       [0]    CM2_bit
0x0019       [0]    COUT_bit
0x0019       [1]    CMCON
0x0019       [0]    CM1_bit
0x0019       [0]    CM0_bit
0x0019       [0]    CIS_bit
0x0019       [0]    CINV_bit
0x0020       [2]    ___DoICPAddr
0x0022       [1]    _bot2
0x0023       [2]    Numero_Y_L0
0x0025       [1]    _bot1
0x0026       [1]    ___saveSTATUS
0x0027       [1]    ___savePCLATH
0x0028       [7]    main_DADO_L0
0x002F       [1]    main_min_L0
0x0030       [1]    main_i_L0
0x0031       [1]    main_Pattern_L0
0x0032       [2]    FARG_Numero_Lim
0x0034       [2]    FARG_Numero_Y
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_GPPU_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS0_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PS1_bit
0x0085       [0]    TRISIO1_bit
0x0085       [0]    TRISIO2_bit
0x0085       [0]    TRISIO0_bit
0x0085       [0]    TRISIO5_bit
0x0085       [1]    TRISIO
0x0085       [0]    TRISIO3_bit
0x0085       [0]    TRISIO4_bit
0x008C       [0]    TMR1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    CMIE_bit
0x008C       [0]    T1IE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    EEIE_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    NOT_BOD_bit
0x008E       [1]    PCON
0x0090       [0]    CAL0_bit
0x0090       [0]    CAL1_bit
0x0090       [1]    OSCCAL
0x0090       [0]    CAL5_bit
0x0090       [0]    CAL4_bit
0x0090       [0]    CAL3_bit
0x0090       [0]    CAL2_bit
0x0095       [0]    WPU1_bit
0x0095       [0]    WPU0_bit
0x0095       [1]    WPU
0x0095       [0]    WPU5_bit
0x0095       [0]    WPU4_bit
0x0095       [0]    WPU2_bit
0x0096       [1]    IOC
0x0096       [0]    IOCB3_bit
0x0096       [0]    IOCB4_bit
0x0096       [0]    IOCB2_bit
0x0096       [0]    IOCB0_bit
0x0096       [0]    IOCB1_bit
0x0096       [0]    IOCB5_bit
0x0096       [1]    IOCB
0x0099       [0]    VR3_bit
0x0099       [0]    VRR_bit
0x0099       [0]    VR2_bit
0x0099       [0]    VR0_bit
0x0099       [0]    VR1_bit
0x0099       [1]    VRCON
0x0099       [0]    VREN_bit
0x009A       [1]    EEDAT
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009C       [0]    WR_bit
0x009C       [0]    RD_bit
0x009C       [0]    WRERR_bit
0x009C       [0]    WREN_bit
0x009D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  _Numero
  _interrupt
  L__interrupt11
  _main
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  _Numero
  _interrupt
  L__interrupt11
  _main
